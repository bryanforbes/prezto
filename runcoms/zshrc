#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

NVM_SYMLINK_CURRENT=false

[[ -e ~/.terminfo ]] && export TERMINFO_DIRS=~/.terminfo:/usr/share/terminfo

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
HISTFILE="${ZDOTDIR:-$HOME}/.zsh_history"

if [[ "${terminfo[kcuu1]}" != "" ]]; then
  bindkey "${terminfo[kcuu1]}" up-line-or-search	# start typing + [Up-Arrow] - fuzzy find history forward
fi
if [[ "${terminfo[kcud1]}" != "" ]]; then
  bindkey "${terminfo[kcud1]}" down-line-or-search	# start typing + [Down-Arrow] - fuzzy find history backward
fi
bindkey '^[[1;5C' forward-word  # [Ctrl-RightArrow] - move forward one word
bindkey '^[[1;5D' backward-word # [Ctrl-LeftArrow] - move backward one word

if [[ -n "$key_info" ]]; then
	bindkey -M emacs "$key_info[Control]F" emacs-forward-word
fi

# git
unalias gs
alias gs='git status'

alias gst='git stash save'
alias gie='git add --edit'

# todo.sh
alias t='todo.sh'

# fasd
alias d='fasd -d'
alias f='fasd -f'
alias sd='fasd -sid'
alias sf='fasd -sif'

alias pgrep='pgrep -fl'
alias pkill='pkill -f'
alias nr='repl.history'

if [[ -d "$HOME/.jenv" ]]; then
	path=(
		~/.jenv/bin
		$path
	)
	eval "$(jenv init -)"
fi

# ack
# On Ubuntu, ack is installed as ack-grep
if (( ${+commands[ack-grep]} )); then
	alias ack=ack-grep
fi

# If run-help is still an alias, unalias it and autoload it (Ubuntu does this for us)
if (( ${+aliases[run-help]} )); then
	unalias run-help
	autoload -Uz run-help
fi

# if [[ -s "$HOME/.nvm/nvm.sh" ]]; then
# 	autoload -U add-zsh-hook
# 	load-nvmrc() {
# 		local node_version="$(nvm version)"
# 		local nvmrc_path="$(nvm_find_nvmrc)"
# 
# 		if [ -n "$nvmrc_path" ]; then
# 			local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")
# 
# 			if [ "$nvmrc_node_version" = "N/A" ]; then
# 			nvm install
# 			elif [ "$nvmrc_node_version" != "$node_version" ]; then
# 			nvm use
# 			fi
# 		elif [ "$node_version" != "$(nvm version default)" ]; then
# 			echo "Reverting to nvm default version"
# 			nvm use default
# 		fi
# 	}
# 	add-zsh-hook chpwd load-nvmrc
# 	load-nvmrc
# fi
